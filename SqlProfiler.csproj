<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
	<!-- The reflection methods we need to wrap DbCommand are not available in netcoreapp1.1 or netstandard1.4 -->
    <TargetFrameworks>net40;netstandard2.0</TargetFrameworks>
    <PackageVersion>0.0.1-alpha3</PackageVersion>
    <Authors>Mike Beaton</Authors>
    <Description>A simple SQL profiler for System.Data.DbCommand, hopefully with some clever .NET dynamic tricks so that it can work as a profiler even if your code needs to set some provider specific properties.

Alpha version.</Description>
    <PackageIconUrl>https://raw.githubusercontent.com/MikeBeaton/SqlProfiler/master/yellow_magnify.png</PackageIconUrl>
    <Copyright>Copyright (c) 2017 Mike Beaton</Copyright>
    <PackageProjectUrl>https://github.com/MikeBeaton/SqlProfiler</PackageProjectUrl>
    <PackageLicenseUrl>https://github.com/MikeBeaton/SqlProfiler/blob/master/LICENSE</PackageLicenseUrl>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <DefineConstants>TRACE;DEBUG</DefineConstants>
    <PlatformTarget>AnyCPU</PlatformTarget>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
    <DefineConstants>RELEASE</DefineConstants>
    <PlatformTarget>AnyCPU</PlatformTarget>
  </PropertyGroup>

  <PropertyGroup Condition="'$(TargetFramework)' == 'net40'">
    <DefineConstants>NETFRAMEWORK</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition="'$(TargetFramework)' == 'netcoreapp1.1' Or '$(TargetFramework)' == 'netcoreapp2.0'">
    <DefineConstants>COREFX</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition="'$(TargetFramework)' == 'netstandard1.4' Or '$(TargetFramework)' == 'netstandard2.0'">
    <DefineConstants>NETSTANDARD</DefineConstants>
  </PropertyGroup>

  <ItemGroup Condition="'$(TargetFramework)' == 'net40'">
    <Reference Include="Microsoft.CSharp" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)' == 'netcoreapp1.1'">
    <PackageReference Include="System.Data.Common" Version="4.3.0" />
	<!-- The TypeExtensions don't help - they don't add calls, only wrap existing calls avoiding the call to GetTypeInfo() -->
    <PackageReference Include="System.Reflection.TypeExtensions" Version="4.3.0" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)' == 'netcoreapp2.0'">
    <PackageReference Include="System.Data.Common" Version="4.3.0" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)' == 'netstandard1.4'">
    <PackageReference Include="Microsoft.CSharp" Version="4.3.0" />
    <PackageReference Include="System.Data.Common" Version="4.3.0" />
    <PackageReference Include="System.Reflection.TypeExtensions" Version="4.3.0" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)' == 'netstandard2.0'">
    <PackageReference Include="System.Data.Common" Version="4.3.0" />
  </ItemGroup>

  <ItemGroup>
    <Compile Update="SimpleCommandWrapper.cs">
      <SubType>Component</SubType>
    </Compile>
    <Compile Update="CommandWrapper.cs">
      <SubType>Component</SubType>
    </Compile>
  </ItemGroup>

</Project>
