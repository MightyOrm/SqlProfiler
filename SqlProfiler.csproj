<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>netstandard1.4;netstandard2.0;net40</TargetFrameworks>
    <Version>0.3.1</Version>
    <Authors>Mike Beaton</Authors>
    <Description>A SQL profiler for System.Data.Common objects, with some clever .NET dynamic tricks so that it can work as a profiler even if your code needs to set ADO.NET provider-specific properties.</Description>
    <Copyright>Copyright (c) 2017-2020 Mike Beaton</Copyright>
    <PackageIcon>icon\yellow_magnify_128x128.png</PackageIcon>
    <PackageProjectUrl>https://github.com/MightyOrm/SqlProfiler</PackageProjectUrl>
    <PackageLicenseExpression>BSD-3-Clause</PackageLicenseExpression>
  </PropertyGroup>

  <ItemGroup>
    <None Include="yellow_magnify_128x128.png" Pack="true" PackagePath="icon"/>
  </ItemGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <DefineConstants>TRACE;DEBUG</DefineConstants>
    <PlatformTarget>AnyCPU</PlatformTarget>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
    <DefineConstants>RELEASE</DefineConstants>
    <PlatformTarget>AnyCPU</PlatformTarget>
  </PropertyGroup>

  <PropertyGroup Condition="'$(TargetFramework)' == 'net40'">
    <DefineConstants>NETFRAMEWORK</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition="'$(TargetFramework)' == 'netcoreapp1.1' Or '$(TargetFramework)' == 'netcoreapp2.0'">
    <DefineConstants>COREFX</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition="'$(TargetFramework)' == 'netstandard1.4' Or '$(TargetFramework)' == 'netstandard2.0'">
    <DefineConstants>NETSTANDARD</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Debug|net40|AnyCPU'">
    <DocumentationFile>C:\OpenSource\SqlProfiler\SqlProfiler.xml</DocumentationFile>
  </PropertyGroup>

  <ItemGroup Condition="'$(TargetFramework)' == 'net40'">
    <Reference Include="Microsoft.CSharp" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)' == 'netcoreapp1.1'">
    <PackageReference Include="System.Data.Common" Version="4.3.0" />
	<!-- The TypeExtensions don't help - they don't add calls, only wrap existing calls avoiding the call to GetTypeInfo() -->
    <PackageReference Include="System.Reflection.TypeExtensions" Version="4.3.0" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)' == 'netcoreapp2.0'">
    <PackageReference Include="System.Data.Common" Version="4.3.0" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)' == 'netstandard1.4'">
    <PackageReference Include="Microsoft.CSharp" Version="4.3.0" />
    <PackageReference Include="System.Data.Common" Version="4.3.0" />
    <PackageReference Include="System.Reflection.TypeExtensions" Version="4.3.0" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)' == 'netstandard2.0'">
    <PackageReference Include="System.Data.Common" Version="4.3.0" />
  </ItemGroup>

</Project>
